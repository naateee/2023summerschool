{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u5434\\u8BED\\u82E5\\\\Desktop\\\\\\u53EF\\u89C6\\u5316\\\\Project2\\\\src\\\\MapChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"/features.json\";\n\n// const colorScale = scaleLinear()\n//   .domain([3, 8])\n//   .range([\"#ffedea\", \"#ff5233\"]);\n\nconst MapChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [yearup, setYear] = useState('2023');\n  const [selectedOption, setSelectedOption] = useState(\"Life Ladder\");\n  const colorScale = scaleLinear().domain([3, 8]).range([\"#ffedea\", \"#ff5233\"]);\n  useEffect(() => {\n    csv(`/WHR_stand.csv`).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      projectionConfig: {\n        rotate: [-10, 0, 0],\n        scale: 147\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sphere, {\n        stroke: \"#E4E5E6\",\n        strokeWidth: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Graticule, {\n        stroke: \"#E4E5E6\",\n        strokeWidth: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            const d = data.find(s => s.ISO3 === geo.id && s.year === yearup);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: d ? colorScale(d[selectedOption]) : \"#F5F4F6\",\n              style: {\n                default: {\n                  outline: \"none\"\n                },\n                hover: {\n                  outline: \"none\",\n                  stroke: \"red\",\n                  strokeWidth: 1\n                },\n                pressed: {\n                  outline: \"none\",\n                  stroke: \"red\",\n                  strokeWidth: 1\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"yearup\",\n        children: [\"Year: \", yearup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"2008\",\n        max: \"2023\",\n        value: yearup,\n        onChange: e => setYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: e => setSelectedOption(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Life Ladder\",\n        children: \"Life Ladder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Log GDP per capita\",\n        children: \"Log GDP per capita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MapChart, \"mF9b6qZbPZ6vTko/1aTXuzFniyw=\");\n_c = MapChart;\nexport default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","useEffect","useState","csv","scaleLinear","ComposableMap","Geographies","Geography","Sphere","Graticule","jsxDEV","_jsxDEV","Fragment","_Fragment","geoUrl","MapChart","_s","data","setData","yearup","setYear","selectedOption","setSelectedOption","colorScale","domain","range","then","children","projectionConfig","rotate","scale","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","length","geography","geographies","map","geo","d","find","s","ISO3","id","year","fill","style","default","outline","hover","pressed","rsmKey","type","min","max","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/吴语若/Desktop/可视化/Project2/src/MapChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"/features.json\";\r\n\r\n// const colorScale = scaleLinear()\r\n//   .domain([3, 8])\r\n//   .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\n\r\nconst MapChart = () => {\r\n  const [data, setData] = useState([]);\r\n  const [yearup, setYear] = useState('2023');\r\n  const [selectedOption, setSelectedOption] = useState(\"Life Ladder\");\r\n\r\n  const colorScale = scaleLinear()\r\n  .domain([3, 8])\r\n  .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\n  useEffect(() => {\r\n    csv(`/WHR_stand.csv`).then((data) => {\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <><ComposableMap\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 147\r\n      }}\r\n      >\r\n      <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      {data.length > 0 && (\r\n        <><Geographies geography={geoUrl}>\r\n          {({ geographies }) => geographies.map((geo) => {\r\n            const d = data.find((s) => s.ISO3 === geo.id && s.year === yearup);\r\n            return (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                fill={d ? colorScale(d[selectedOption]) : \"#F5F4F6\"}\r\n                style={{\r\n                  default: {\r\n                    outline: \"none\"\r\n                  },\r\n                  hover: {\r\n                    outline: \"none\",\r\n                    stroke: \"red\",\r\n                    strokeWidth: 1\r\n                  },\r\n                  pressed: {\r\n                    outline: \"none\",\r\n                    stroke: \"red\",\r\n                    strokeWidth: 1\r\n                  },\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </Geographies></>\r\n      )}\r\n    </ComposableMap><div>\r\n        <label id=\"yearup\">Year: {yearup}</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"2008\"\r\n          max=\"2023\"\r\n          value={yearup}\r\n          onChange={e => setYear(e.target.value)} />\r\n      </div>\r\n      <select value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)}>\r\n        <option value=\"Life Ladder\">Life Ladder</option>\r\n        <option value=\"Log GDP per capita\">Log GDP per capita</option>\r\n      </select>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default MapChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}