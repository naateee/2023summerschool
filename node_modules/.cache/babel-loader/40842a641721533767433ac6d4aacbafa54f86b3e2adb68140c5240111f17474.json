{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u5434\\u8BED\\u82E5\\\\Desktop\\\\\\u53EF\\u89C6\\u5316\\\\Project2\\\\src\\\\MapChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"/features.json\";\nconst colorScale = scaleLinear().domain([0.29, 0.68]).range([\"#ffedea\", \"#ff5233\"]);\nconst MapChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projectionConfig: {\n      rotate: [-10, 0, 0],\n      scale: 147\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sphere, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graticule, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const d = data.find(s => s.ISO3 === geo.id);\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: d ? colorScale(d[\"2016\"]) : \"#F5F4F6\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MapChart;\nexport default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","useEffect","useState","csv","scaleLinear","ComposableMap","Geographies","Geography","Sphere","Graticule","jsxDEV","_jsxDEV","geoUrl","colorScale","domain","range","MapChart","_s","data","setData","then","projectionConfig","rotate","scale","children","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","length","geography","geographies","map","geo","d","find","s","ISO3","id","fill","rsmKey","_c","$RefreshReg$"],"sources":["C:/Users/吴语若/Desktop/可视化/Project2/src/MapChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"/features.json\";\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0.29, 0.68])\r\n  .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst MapChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    csv(`/vulnerability.csv`).then((data) => {\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ComposableMap\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 147\r\n      }}\r\n    >\r\n      <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const d = data.find((s) => s.ISO3 === geo.id);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={d ? colorScale(d[\"2016\"]) : \"#F5F4F6\"}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      )}\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,UAAU;AAC9B,SAASC,WAAW,QAAQ,UAAU;AACtC,SACEC,aAAa,EACbC,WAAW,EACXC,SAAS,EACTC,MAAM,EACNC,SAAS,QACJ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAG,gBAAgB;AAE/B,MAAMC,UAAU,GAAGT,WAAW,CAAC,CAAC,CAC7BU,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CACpBC,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdE,GAAG,CAAE,oBAAmB,CAAC,CAACiB,IAAI,CAAEF,IAAI,IAAK;MACvCC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACN,aAAa;IACZgB,gBAAgB,EAAE;MAChBC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MACnBC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,gBAEFb,OAAA,CAACH,MAAM;MAACiB,MAAM,EAAC,SAAS;MAACC,WAAW,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CnB,OAAA,CAACF,SAAS;MAACgB,MAAM,EAAC,SAAS;MAACC,WAAW,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/CZ,IAAI,CAACa,MAAM,GAAG,CAAC,iBACdpB,OAAA,CAACL,WAAW;MAAC0B,SAAS,EAAEpB,MAAO;MAAAY,QAAA,EAC5BA,CAAC;QAAES;MAAY,CAAC,KACfA,WAAW,CAACC,GAAG,CAAEC,GAAG,IAAK;QACvB,MAAMC,CAAC,GAAGlB,IAAI,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKJ,GAAG,CAACK,EAAE,CAAC;QAC7C,oBACE7B,OAAA,CAACJ,SAAS;UAERyB,SAAS,EAAEG,GAAI;UACfM,IAAI,EAAEL,CAAC,GAAGvB,UAAU,CAACuB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG;QAAU,GAFvCD,GAAG,CAACO,MAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGhB,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO,CACd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB,CAAC;AAACb,EAAA,CApCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}